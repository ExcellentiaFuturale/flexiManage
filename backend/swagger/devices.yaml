swagger: "2.0"
info:
  version: 0.0.1
  title: FlexiWAN
paths:
  /devices:
    get:
      summary: Returns all registered devices
      tags:
      - 'Devices'
      produces:
      - application/json
      security:
      - JWT: []
      responses:
        200:
          description: All registered devices successfully returned
          schema:
            $ref: '#components/schemas/GetDevices'
        403:
          description: User not authorized to call this API
          schema:
            $ref: '#components/schemas/AuthError'

  /devices/{deviceID}:
    get:
      summary: Returns a single device by its ID
      tags:
      - 'Devices'
      produces:
      - application/json
      parameters:
        - in: path
          name: deviceID
          description: The ID of the device
          required: true
          type: string
      security:
      - JWT: []
      responses:
        200:
          description: Device successfully returned
          schema:
            $ref: '#components/schemas/GetDevice'
        403:
          description: User not authorized to call this API
          schema:
            $ref: '#components/schemas/AuthError'
        500:
          description: Device does not exist
    put:
      summary: Updates details of a single device by its id
      tags:
      - 'Devices'
      produces:
      - application/json
      parameters:
        - in: path 
          description: ID of the device to update
          name: deviceID
          required: true
          type: string
        - in: body
          description: Updated details of the device
          name: body
          required: true
          schema:
            $ref: '#components/schemas/UpdDevice'
      security:
      - JWT: []
      responses:
        200:
          description: Device updated
          schema:
            $ref: '#components/schemas/GetDevice'
        403:
          description: User not authorized to call this API
          schema:
            $ref: '#components/schemas/AuthError'
        400:
          description: Device does not exist
    delete:
      description: Deletes a single device
      tags:
      - 'Devices'
      parameters:
        - in: path
          description: ID of device to delete
          name: deviceID
          required: true
          type: string
      security:
      - JWT: []
      responses:
        200:
          description: Device deleted
          schema:
            $ref: '#components/schemas/DelDevice'
        403:
          description: User not authorized to call this API
          schema:
            $ref: '#components/schemas/AuthError'
        400:
          description: Device does not exist

  /devices/{deviceID}/apply:
    post:
      summary: Runs a command on the device
      tags:
      - 'Devices'
      produces:
      - application/json
      parameters:
        - in: path 
          description: ID of the device
          name: deviceID
          required: true
          type: string
        - in: body
          description: The command to run on the device
          name: body
          required: true
          schema:
            $ref: '#components/schemas/RunCmdBasicRequest'
      security:
      - JWT: []
      responses:
        200:
          description: Device updated
          schema:
            $ref: '#components/schemas/RunCmdBasicResponse'
        403:
          description: User not authorized to call this API
          schema:
            $ref: '#components/schemas/AuthError'
        500:
          description: Operation failed
          schema:
            $ref: '#components/schemas/OperationFailed'

  /devices/apply:
    post:
      summary: Runs a command on multiple devices
      tags:
      - 'Devices'
      produces:
      - application/json
      parameters:
        - in: body
          description: The command to run on the device
          name: body
          required: true
          schema:
            oneOf:
              - $ref: '#components/schemas/RunCmdTunnelCreateRequest'
              - $ref: '#components/schemas/RunCmdTunnelDeleteRequest'
      security:
      - JWT: []
      responses:
        200:
          description: Device updated
          schema:
            $ref: '#components/schemas/RunCmdBasicResponse'
        403:
          description: User not authorized to call this API
          schema:
            $ref: '#components/schemas/AuthError'
        500:
          description: Operation failed
          schema:
            $ref: '#components/schemas/OperationFailed'

components:
  $ref: './components/deviceComponents.yaml'

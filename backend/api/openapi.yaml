openapi: 3.0.1
info:
  title: FlexiWAN API
  description: This is the REST API for flexiWAN management.
  termsOfService: https://flexiwan.com/legal/terms-of-service/
  contact:
    name: API support
    url: https://flexiwan.com
    email: yourfriends@flexiwan.com
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  version: 1.0.0
servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/frozen-eye/flexiwanManage/1.0.0
- description: Production server
  url: https://manage.flexiwan.com/api
- description: Local Development server
  url: https://local.flexiwan.com:3443/api
paths:
  /tokens:
    get:
      tags:
      - Tokens
      summary: Get all Tokens
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
                x-content-type: application/json
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Tokens
    post:
      tags:
      - Tokens
      summary: Create new access token
      # operationId: accessToken_accesstokensPOST
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Token to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
              required: true
              description: Location of a new resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Tokens
  /tokens/{id}:
    put:
      tags:
      - Tokens
      summary: Modify a token
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Token to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Tokens
    delete:
      tags:
      - Tokens
      summary: Delete token
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Token to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Successfull operation
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Tokens

  /accesstokens:
    get:
      tags:
      - Access Tokens
      summary: Get all AccessTokens
      # operationId: accessToken_accesstokensGET
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
                x-content-type: application/json
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: AccessTokens
    post:
      tags:
      - Access Tokens
      summary: Create new access token
      # operationId: accessToken_accesstokensPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
              required: true
              description: Location of a new resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: AccessTokens

  /accesstokens/{id}:
    put:
      tags:
      - Access Tokens
      summary: Modify an access token
      # operationId: accessToken_accesstokens_idPUT
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Access token to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken'
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
                x-content-type: application/json
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: AccessTokens
    delete:
      tags:
      - Access Tokens
      summary: Delete access token
      # operationId: accessToken_accesstokens_idDELETE
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Access token to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Successfull operation
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: AccessTokens

  /devices:
    get:
      tags:
      - Devices
      summary: Get all registered devices
      # operationId: Device_devicesGET
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
                x-content-type: application/json
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Devices

  /devices/execute:
    post:
      tags:
      - Devices
      summary: Execute an action on the device side
      # operationId: Device_devices_actionPOST
      parameters:
      - name: action
        in: query
        description: Command to execute
        required: true
        schema:
          type: string
      - name: ids
        in: query
        description: Ids of devices to execute action on
        required: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateTunnelCommand'
                - $ref: '#/components/schemas/DeleteTunnelCommand'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Devices

  /devices/{id}:
    put:
      tags:
      - Devices
      summary: Modify device
      # operationId: Device_devices_idPUT
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
      responses:
        "204":
          description: Successfull operation
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Devices
    delete:
      tags:
      - Devices
      summary: Delete device
      # operationId: devicesIdDELETE
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Successfull operation
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Devices

  /tunnels/{id}:
    get:
      tags:
      - Tunnels
      summary: Retrieve device tunnels information
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to fetch tunnel information about
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
        description: The numbers of items to return
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tunnel'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Routes
  /devices/{id}/routes:
    get:
      tags:
      - Routes
      summary: Retrieve device routes information
      # operationId: route_devices_id_routesGET
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to feth information about
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
        description: The numbers of items to return
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceRouteInformation'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Routes
  /devices/{id}/staticroutes:
    get:
      tags:
      - Static Routes
      summary: Retrieve device static routes information
      # operationId: staticRoute_devices_id_staticroutesGET
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to feth information about
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
        description: The numbers of items to return
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: StaticRoutes

  /devices/{id}/staticroutes/{route}:
    put:
      tags:
      - Static Routes
      summary: Modify static route
      # operationId: staticRoute_devices_id_staticroutesPUT
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: route
        in: path
        description: Numeric ID of the Route to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteRequest'
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: StaticRoutes
    post:
      tags:
      - Static Routes
      summary: Create new static route
      # operationId: staticRoute_devices_id_staticroutesPOST
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: route
        in: path
        description: Numeric ID of the Route to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteRequest'
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
              required: true
              description: Location of a new resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStaticRouteInformation'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: StaticRoutes
    delete:
      tags:
      - Static Routes
      summary: Delete static route
      # operationId: staticRoute_devices_id_staticroutesDELETE
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: route
        in: path
        description: Numeric ID of the Route to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Successfull operation
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: StaticRoutes
  /devices/{id}/statistics:
    get:
      tags:
      - Statistics
      summary: Retrieve device statistics information
      # operationId: statistics_devices_id_statisticsGET
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to feth information about
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatistics'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Statistics
  /devices/{id}/logs:
    get:
      tags:
      - Logs
      summary: Retrieve device logs information
      # operationId: log_devices_id_logsGET
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to feth information about
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
        description: The numbers of items to return
      - name: filter
        in: query
        description: Filter to be applied
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceLog'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Logs
  /devices/{id}/configuration:
    get:
      tags:
      - Configuration
      summary: Retrieve device configuration information
      # operationId: Configuration_devices_id_consigurationGET
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to feth information about
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfiguration'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Configuration
  /devices/{id}/execute:
    post:
      tags:
      - Devices
      summary: Execute an action on the device side
      # operationId: Device_devices_id_actionPOST
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Device to start
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: action
        in: query
        description: Command to execute
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateTunnelCommand'
                - $ref: '#/components/schemas/DeleteTunnelCommand'
      responses:
        "204":
          description: No Content
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Devices
  /jobs:
    get:
      tags:
      - Jobs
      summary: Get all Jobs
      parameters: 
        - in: query
          name: state
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: filter
          schema:
            type: string
          description: The filter to apply on a query
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
                x-content-type: application/json
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Jobs

  /jobs/{id}:
    delete:
      tags:
      - Jobs
      summary: Delete a job
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Job to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Successfull operation
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Jobs

  /notifications:
    get:
      tags:
      - Notifications
      summary: Get all Notifications
      # operationId: notification_notificationsGET
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
                x-content-type: application/json
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Notifications
    put:
      tags:
      - Notifications
      summary: Modify notification
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NotificationRequest'
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: StaticRoutes

  /members:
    get:
      tags:
      - Members
      summary: Get all Members
      # operationId: member_membersGET
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
        description: The numbers of items to return
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
                x-content-type: application/json
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Members
    post:
      tags:
      - Members
      summary: Create new member
      # operationId: member_membersPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
      responses:
        "201":
          description: Member has been added
          headers:
            Location:
              schema:
                type: string
              required: true
              description: Location of a new resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Members

  /members/{id}:
    put:
      tags:
      - Members
      summary: Modify member
      parameters:
      - name: id
        in: path
        description: Numeric ID of the account to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Members

  /users/login:
    post:
      tags:
      - Users
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Users
  
  /users/reset-password:
    post:
      tags:
      - Users
      summary: Reset password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Users

  /accounts:
    post:
      tags:
      - Accounts
      summary: Create new account
      # operationId: member_membersPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAccountRequest'
      responses:
        "201":
          description: Account has been created
          headers:
            Location:
              schema:
                type: string
              required: true
              description: Location of a new resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Accounts

  /accounts/{id}:
    get:
      tags:
      - Accounts
      summary: Retrieve account information
      # operationId: account_accounts_idGET
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Account to retrieve information
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Accounts
    put:
      tags:
      - Accounts
      summary: Modify account information
      # operationId: account_accounts_idPUT
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Account to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
      - apiKey: []
      x-swagger-router-controller: Accounts

  /organizations:
    get:
      tags:
      - Organizations
      summary: Get all organizations
      # operationId: organization_organizationsGET
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
        description: The numbers of items to return
      responses:
        "200":
          description: Successfull operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
                x-content-type: application/json
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Organizations
    post:
      tags:
      - Organizations
      summary: Add new organization
      # operationId: organization_organizationsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
              required: true
              description: Location of a new resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Organizations
  /organizations/{id}:
    put:
      tags:
      - Organizations
      summary: Modify organization
      # operationId: organization_organizations_idPUT
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Organization to modify
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Organizations
    delete:
      tags:
      - Organizations
      summary: Delete organization
      # operationId: organization_organizations_idDELETE
      parameters:
      - name: id
        in: path
        description: Numeric ID of the Organization to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Successfull operation
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - apiKey: []
      - bearerAuth: []
      x-swagger-router-controller: Organizations
components:
  schemas:
    AccessToken:
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        name:
          type: string
        organization:
          type: string
        token:
          type: string
          readOnly: true
        isValid:
          type: boolean
          readOnly: true
          default: true
      example:
        organization: organization
        isValid: true
        name: name
        _id: id
        token: token
    AccessTokenRequest:
      type: object
      properties:
        name:
          type: string
        organization:
          type: string
      example:
        organization: organization
        name: name
    MemberRequest:
      type: object
      properties:
        email:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        userJobTitle:
          type: string
        userPermissionTo:
          type: string
          enum:
            - account
            - group
            - organization
        userEntity:
          type: string
        userRole:
          type: string
          enum:
            - viewer
            - manager
            - owner

    Token:
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        name:
          type: string
        org:
          type: string
        token:
          type: string
          readOnly: true
      example:
        org: organization
        name: name
        _id: id
        token: token
    TokenRequest:
      type: object
      properties:
        name:
          type: string
      example:
        name: name

    Account:
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        name:
          type: string
        companyType:
          type: string
        companyDesc:
          type: string
        country:
          maxLength: 2
          type: string
        enableNotifications:
          type: boolean
          default: true
      example:
        country: country
        companyType: companyType
        companyDesc: companyDesc
        enableNotifications: true
        name: name
        _id: _id
    
    AccountRequest:
      type: object
      properties:
        name:
          type: string
        companyType:
          type: string
        companyDesc:
          type: string
        country:
          maxLength: 2
          type: string
        enableNotifications:
          type: boolean
          default: true

    OrganizationRequest:
      type: object
      properties:
        name:
          type: string
        group:
          type: string
        account:
          type: string

    Organization:
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        name:
          type: string
        group:
          type: string
        account:
          type: string
      example:
        name: name
        _id: _id
        account: account
        group: group

    NotificationRequest:
      type: object
      properties:
        count:
          minimum: 0
          type: integer

    Notification:
      type: object
      properties:
        count:
          minimum: 0
          type: integer
      example:
        count: 0
    JobAttempt:
      type: object
      properties:
        made:
          type: integer
        remaining:
          type: integer
        max:
          type: integer
    Job:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        priority:
          type: integer
        progress:
          type: integer
        state:
          type: integer
        created_at:
          type: string
        attempts:
          $ref: '#/components/schemas/JobAttempt'
        #data: {message: {title: "Delete tunnel between (fw01,enp0s8) and (fw01,enp0s8)",…},…}
        #priority: 0
        #progress: 0
        #state: "inactive"
        #attempts: {made: 0, remaining: 1, max: 1}

    Device:
      type: object
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
          readOnly: true
        machineId:
          type: string
        name:
          type: string
        description:
          type: string
        site:
          type: string
        defaultRoute:
          type: string
        isApproved:
          type: boolean
        isConnected:
          type: boolean
        pendingDevModification:
          type: boolean
        hostname:
          type: boolean
        deviceStatus:
          type: boolean
        deviceToken:
          type: string
        fromToken:
          type: string
        account:
          type: string
        org:
          type: string
        ipList:
          type: string
        staticroutes:
          type: array
          items:
            $ref: '#/components/schemas/StaticRoute'
        upgradeSchedule:
          $ref: '#/components/schemas/UpgradeSchedule'
        labels:
          type: array
          items:
            type: string
        interfaces:
          type: array
          items:
            $ref: '#/components/schemas/Interface'
        versions:
          $ref: '#/components/schemas/DeviceVersion'
      example:
        interfaces:
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          MAC: MAC
          routing: routing
          IPv6Mask: 6
          isAssigned: true
          driver: driver
          IPv4Mask: 0
          name: name
          pciaddr: pciaddr
          _id: _id
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          MAC: MAC
          routing: routing
          IPv6Mask: 6
          isAssigned: true
          driver: driver
          IPv4Mask: 0
          name: name
          pciaddr: pciaddr
          _id: _id
        org: org
        isConnected: true
        upgradeSchedule:
          jobQueued: true
          _id: _id
          time: time
        description: description
        defaultRoute: defaultRoute
        deviceStatus: true
        deviceToken: deviceToken
        labels:
        - labels
        - labels
        _machineId: _machineId
        site: site
        hostname: true
        versions:
          agent: agent
          router: router
          device: device
        name: name
        _id: _id
        pendingDevModification: true
        isApproved: true
        staticroutes:
        - id: id
        - id: id
        fromToken: fromToken
        account: account
        ipList: ipList
    UpgradeSchedule:
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        time:
          type: string
        jobQueued:
          type: boolean
      example:
        jobQueued: true
        _id: _id
        time: time
    Interface:
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        pciaddr:
          type: string
        driver:
          type: string
        IPv4:
          type: string
        IPv6:
          type: string
        PublicIP:
          type: string
        isAssigned:
          type: boolean
        routing:
          type: string
        type:
          type: string
          enum:
          - WAN
          - LAN
        IPv4Mask:
          type: integer
        MAC:
          type: string
        name:
          type: string
        IPv6Mask:
          type: integer
      example:
        IPv6: IPv6
        PublicIP: PublicIP
        IPv4: IPv4
        type: WAN
        MAC: MAC
        routing: routing
        IPv6Mask: 6
        isAssigned: true
        driver: driver
        IPv4Mask: 0
        name: name
        pciaddr: pciaddr
        _id: _id
    DeviceVersion:
      type: object
      properties:
        agent:
          type: string
        device:
          type: string
        router:
          type: string
      example:
        agent: agent
        router: router
        device: device
    Role:
      type: string
      enum:
      - owner
      - manager
      - viewer
    Member:
      type: object
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
          readOnly: true
        user__id:
          maxLength: 24
          minLength: 24
          type: string
        user_name:
          type: string
        user_email:
          type: string
        to:
          type: string
        account_name:
          type: string
        account__id:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
        organization_name:
          type: string
        organization__id:
          maxLength: 24
          minLength: 24
          type: string
        role:
          $ref: '#/components/schemas/Role'
      example:
        user_email: user_email
        role: owner
        user__id: user__id
        user_name: user_name
        account_name: account_name
        _id: _id
        to: to
        organization_name: organization_name
        account__id: account__id
        group: group
        organization__id: organization__id
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    DeviceStatus:
      type: string
      enum:
      - connected
      - disconnected
    DeviceStaticRouteRequest:
      type: object
      properties:
        destination:
          type: string
        gateway:
          type: string
        ifname:
          type: string

    DeviceRouteInformation:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        osRoutes:
          type: array
          items:
            $ref: '#/components/schemas/DeviceRouteOs'
        vppRoutes:
          type: array
          items:
            $ref: '#/components/schemas/DeviceRouteVpp'
    DeviceRouteOs:
      type: object
      properties:
        metric:
          type: integer
        destination:
          type: string
        mask:
          type: string
        flags:
          type: string
        interface:
          type: string
        gateway:
          type: string
    DeviceRouteVpp:
      type: object
      properties:
        metric:
          type: integer
    DeviceStaticRouteInformation:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        destination:
          type: string
        gateway:
          type: string
        ifname:
          type: string
      example:
        status: connected
        ifname: eth0
        destination: "1.1.0.0"
        gateway: "1.1.1.1"
    DeviceStatistics:
      type: object
      properties:
        status:
          type: object
      example:
        status: status
    DeviceConfiguration:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        configuration:
          type: array
          items:
            $ref: '#/components/schemas/DeviceConfigurationItem'
      example:
        configuration:
        - message: message
          params:
          - {}
          - {}
        - message: message
          params:
          - {}
          - {}
        status: connected
    DeviceConfigurationItem:
      type: object
      properties:
        message:
          type: string
        params:
          type: array
          items:
            type: object
      example:
        message: message
        params:
        - {}
        - {}
    DeviceLog:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        logs:
          type: array
          items:
            type: string
      example:
        logs:
        - logs
        - logs
        status: connected

    Tunnel:
      type: object
      properties:
        num:
          type: integer
        isActive:
          type: boolean
        deviceAconf:
          type: boolean
        deviceBconf:
          type: boolean
        _id:
          type: string
        __v:
          type: integer
        deviceA:
          type: object
        deviceB:
          type: object
        interfaceA:
          type: object
        interfaceB:
          type: object
        interfaceADetails:
          type: object
        interfaceBDetails:
          type: object
        tunnelStatusA:
          type : object
        tunnelStatusB:
          type: object
    
    body_2:
      type: object
      properties:
        name:
          type: string
    StaticRouteRequest:
      type: object
      properties:
        _id:
          type: string
        destination:
          maxLength: 24
          type: string
          description: Destination
        gateway:
          maxLength: 24
          type: string
          description: Gateway to use
        interface:
          maxLength: 24
          type: string
          description: Interface name
    StaticRoute:
      type: object
      properties:
        destination:
          maxLength: 24
          type: string
          description: Destination
        gateway:
          maxLength: 24
          type: string
          description: Gateway to use
        interface:
          maxLength: 24
          type: string
          description: Interface name

    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string

    RegisterAccountRequest:
      type: object
      properties:
        accountName:
          type: string
        email:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        userJobTitle:
          type: string
        userPhoneNumber:
          type: string
        password:
          type: string
        country:
          type: string
          maxLength: 2
        companySize:
          type: string
        serviceType:
          type: string
          enum:
          - Provider
          - Internal
        numberSites:
          type: integer
        acceptTerms:
          type: boolean
        
          

    # commands
    #method: "tunnels"
    #devices: {5e15e5bc98a6453dbbcf3a8e: true, 5e15e65798a6453dbbcf3ae8: true}
    CreateTunnelCommand:
      type: object
      properties:
        devices:
          type: array
          items:
            type: string

    DeleteTunnelCommand:
      type: object
      properties:
        id:
          type: string

    # error
    Error:
      type: object
      properties:
        error:
          type: string
  responses:
    NotFoundError:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    apiKey:
      type: apiKey
      name: APIKEY
      in: header
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
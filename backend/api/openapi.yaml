openapi: 3.0.1
info:
  contact:
    email: yourfriends@flexiwan.com
    name: API support
    url: https://flexiwan.com
  description: This is the REST API for flexiWAN management.
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  termsOfService: https://flexiwan.com/legal/terms-of-service/
  title: FlexiWAN API
  version: 1.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/frozen-eye/flexiwanManage/1.0.0
- description: Production server
  url: https://manage.flexiwan.com/api/v1
- description: Local Development server
  url: https://local.flexiwan.com:3443/api
paths:
  /tokens:
    get:
      operationId: tokensGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Token'
                type: array
                x-content-type: application/json
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Tokens
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
    post:
      operationId: tokensPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new access token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
  /tokens/{id}:
    delete:
      operationId: tokensIdDELETE
      parameters:
      - description: Numeric ID of the Token to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
    put:
      operationId: tokensIdPUT
      parameters:
      - description: Numeric ID of the Token to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Created
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
  /accesstokens:
    get:
      operationId: accesstokensGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessToken'
                type: array
                x-content-type: application/json
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all AccessTokens
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
    post:
      operationId: accesstokensPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new access token
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
  /accesstokens/{id}:
    delete:
      operationId: accesstokensIdDELETE
      parameters:
      - description: Numeric ID of the Access token to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete access token
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
    put:
      operationId: accesstokensIdPUT
      parameters:
      - description: Numeric ID of the Access token to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessToken'
                type: array
                x-content-type: application/json
          description: Successfull operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify an access token
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
  # /devices:
  #   get:
  #     operationId: devicesGET
  #     parameters:
  #     - description: The number of items to skip before starting to collect the result
  #         set
  #       explode: true
  #       in: query
  #       name: offset
  #       required: false
  #       schema:
  #         type: integer
  #       style: form
  #     - description: The numbers of items to return
  #       explode: true
  #       in: query
  #       name: limit
  #       required: false
  #       schema:
  #         type: integer
  #       style: form
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               items:
  #                 $ref: '#/components/schemas/Device'
  #               type: array
  #               x-content-type: application/json
  #         description: Successful operation
  #       "401":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unauthorized
  #       "403":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Forbidden
  #       "404":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: The specified resource was not found
  #       "500":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Internal server error
  #       default:
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unexpected error
  #     security:
  #     - apiKey: []
  #     - bearerAuth: []
  #     summary: Get all registered devices
  #     tags:
  #     - Devices
  #     x-swagger-router-controller: Devices
  #     x-openapi-router-controller: DevicesController
  #     x-openapi-router-service: DevicesService
  # /devices/register:
  #   post:
  #     operationId: devicesRegisterPOST
  #     responses:
  #       "204":
  #         description: No Content
  #       "400":
  #         description: Bad Request
  #       "401":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unauthorized
  #       "402":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/Error"
  #         description: Payment needed
  #       "403":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Forbidden
  #       "500":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Internal server error
  #       default:
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unexpected error
  #     security:
  #     - apiKey: []
  #     - bearerAuth: []
  #     summary: Execute an action on the device side
  #     tags:
  #     - Devices
  #     x-swagger-router-controller: Devices
  #     x-openapi-router-controller: DevicesController
  #     x-openapi-router-service: DevicesService

  # /devices/execute:
  #   post:
  #     operationId: devicesExecutePOST
  #     parameters:
  #     - description: Command to execute
  #       explode: true
  #       in: query
  #       name: action
  #       required: true
  #       schema:
  #         type: string
  #       style: form
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CommandRequest'
  #     responses:
  #       "204":
  #         description: No Content
  #       "400":
  #         description: Bad Request
  #       "401":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unauthorized
  #       "403":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Forbidden
  #       "500":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Internal server error
  #       default:
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unexpected error
  #     security:
  #     - apiKey: []
  #     - bearerAuth: []
  #     summary: Execute an action on the device side
  #     tags:
  #     - Devices
  #     x-swagger-router-controller: Devices
  #     x-openapi-router-controller: DevicesController
  #     x-openapi-router-service: DevicesService
  # /devices/{id}:
  #   delete:
  #     operationId: devicesIdDELETE
  #     parameters:
  #     - description: Numeric ID of the Device to delete
  #       explode: false
  #       in: path
  #       name: id
  #       required: true
  #       schema:
  #         type: string
  #       style: simple
  #     responses:
  #       "204":
  #         description: Successfull operation
  #       "401":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unauthorized
  #       "403":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Forbidden
  #       "404":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: The specified resource was not found
  #       "500":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Internal server error
  #       default:
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unexpected error
  #     security:
  #     - apiKey: []
  #     - bearerAuth: []
  #     summary: Delete device
  #     tags:
  #     - Devices
  #     x-swagger-router-controller: Devices
  #     x-openapi-router-controller: DevicesController
  #     x-openapi-router-service: DevicesService
  #   put:
  #     operationId: devicesIdPUT
  #     parameters:
  #     - description: Numeric ID of the Device to modify
  #       explode: false
  #       in: path
  #       name: id
  #       required: true
  #       schema:
  #         type: string
  #       style: simple
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/DeviceRequest'
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Device'
  #         description: Successful operation
  #       "400":
  #         description: Bad Request
  #       "401":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unauthorized
  #       "403":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Forbidden
  #       "404":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: The specified resource was not found
  #       "500":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Internal server error
  #       default:
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #         description: Unexpected error
  #     security:
  #     - apiKey: []
  #     - bearerAuth: []
  #     summary: Modify device
  #     tags:
  #     - Devices
  #     x-swagger-router-controller: Devices
  #     x-openapi-router-controller: DevicesController
  #     x-openapi-router-service: DevicesService
  /tunnels/{id}:
    get:
      operationId: tunnelsIdGET
      parameters:
      - description: Numeric ID of the Device to fetch tunnel information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tunnel'
                type: array
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device tunnels information
      tags:
      - Tunnels
      x-swagger-router-controller: Routes
      x-openapi-router-controller: TunnelsController
      x-openapi-router-service: TunnelsService
  /devices/{id}/routes:
    get:
      operationId: devicesIdRoutesGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceRouteInformation'
                type: array
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device routes information
      tags:
      - Routes
      x-swagger-router-controller: Routes
      x-openapi-router-controller: RoutesController
      x-openapi-router-service: RoutesService
  /devices/{id}/staticroutes:
    get:
      operationId: devicesIdStaticroutesGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device static routes information
      tags:
      - Static Routes
      x-swagger-router-controller: StaticRoutes
      x-openapi-router-controller: StaticRoutesController
      x-openapi-router-service: StaticRoutesService
  /devices/{id}/staticroutes/{route}:
    delete:
      operationId: devicesIdStaticroutesRouteDELETE
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Route to delete
        explode: false
        in: path
        name: route
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete static route
      tags:
      - Static Routes
      x-swagger-router-controller: StaticRoutes
      x-openapi-router-controller: StaticRoutesController
      x-openapi-router-service: StaticRoutesService
    post:
      operationId: devicesIdStaticroutesRoutePOST
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Route to modify
        explode: false
        in: path
        name: route
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStaticRouteInformation'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new static route
      tags:
      - Static Routes
      x-swagger-router-controller: StaticRoutes
      x-openapi-router-controller: StaticRoutesController
      x-openapi-router-service: StaticRoutesService
    put:
      operationId: devicesIdStaticroutesRoutePUT
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Route to modify
        explode: false
        in: path
        name: route
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successfull operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify static route
      tags:
      - Static Routes
      x-swagger-router-controller: StaticRoutes
      x-openapi-router-controller: StaticRoutesController
      x-openapi-router-service: StaticRoutesService
  /devices/{id}/statistics:
    get:
      operationId: devicesIdStatisticsGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: object
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatistics'
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device statistics information
      tags:
      - Statistics
      x-swagger-router-controller: Statistics
      x-openapi-router-controller: StatisticsController
      x-openapi-router-service: StatisticsService
  /devices/{id}/logs:
    get:
      operationId: devicesIdLogsGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Filter to be applied
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceLog'
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device logs information
      tags:
      - Logs
      x-swagger-router-controller: Logs
      x-openapi-router-controller: LogsController
      x-openapi-router-service: LogsService
  /devices/{id}/configuration:
    get:
      operationId: devicesIdConfigurationGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfiguration'
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device configuration information
      tags:
      - Configuration
      x-swagger-router-controller: Configuration
      x-openapi-router-controller: ConfigurationController
      x-openapi-router-service: ConfigurationService
  /devices/{id}/execute:
    post:
      operationId: devicesIdExecutePOST
      parameters:
      - description: Numeric ID of the Device to start
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Command to execute
        explode: true
        in: query
        name: action
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/CreateTunnelCommand'
              - $ref: '#/components/schemas/DeleteTunnelCommand'
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Execute an action on the device side
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /jobs:
    get:
      operationId: jobsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: A filter on the job status
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Job'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Jobs
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
  /jobs/{id}:
    delete:
      operationId: jobsIdDELETE
      parameters:
      - description: Numeric ID of the Job to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a job
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
  /notifications:
    get:
      operationId: notificationsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Notification'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Notifications
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /members:
    get:
      operationId: membersGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Members
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
    post:
      operationId: membersPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Member has been added
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Create new member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /members/{id}:
    delete:
      operationId: membersIdDELETE
      parameters:
      - description: Numeric ID of the Member to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
    put:
      operationId: membersIdPUT
      parameters:
      - description: Numeric ID of the account to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Successfull operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /users/login:
    post:
      operationId: usersLoginPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Login
      tags:
      - Users
      x-swagger-router-controller: Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
  /users/reset-password:
    post:
      operationId: usersResetPasswordPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Reset password
      tags:
      - Users
      x-swagger-router-controller: Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
  /users/update-password:
    post:
      operationId: usersUpdatePasswordPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update password
      tags:
      - Users
      x-swagger-router-controller: Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
  /accounts:
    get:
      operationId: accountsGET
      parameters:
        - description: The number of items to skip before starting to collect the result
            set
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: The numbers of items to return
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Accounts
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService

    post:
      operationId: accountsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAccountRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account has been created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Create new account
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /accounts/{id}:
    get:
      operationId: accountsIdGET
      parameters:
      - description: Numeric ID of the Account to retrieve information
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Retrieve account information
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
    put:
      operationId: accountsIdPUT
      parameters:
      - description: Numeric ID of the Account to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Modify account information
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /organizations:
    get:
      operationId: organizationsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
                x-content-type: application/json
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all organizations
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
    post:
      operationId: organizationsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add new organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
  /organizations/{id}:
    delete:
      operationId: organizationsIdDELETE
      parameters:
      - description: Numeric ID of the Organization to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
    put:
      operationId: organizationsIdPUT
      parameters:
      - description: Numeric ID of the Organization to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
components:
  responses:
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    ForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
  schemas:
    AccessToken:
      example:
        organization: organization
        isValid: true
        name: name
        _id: id
        token: token
      properties:
        _id:
          readOnly: true
          type: string
        name:
          type: string
        organization:
          type: string
        token:
          readOnly: true
          type: string
        isValid:
          default: true
          readOnly: true
          type: boolean
      type: object
    AccessTokenRequest:
      example:
        organization: organization
        name: name
      properties:
        name:
          type: string
        organization:
          type: string
      type: object
    MemberRequest:
      example:
        userJobTitle: userJobTitle
        userEntity: userEntity
        userLastName: userLastName
        userFirstName: userFirstName
        userRole: viewer
        email: email
        userPermissionTo: account
      properties:
        email:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        userJobTitle:
          type: string
        userPermissionTo:
          enum:
          - account
          - group
          - organization
          type: string
        userEntity:
          type: string
        userRole:
          enum:
          - viewer
          - manager
          - owner
          type: string
      type: object
    Token:
      example:
        org: organization
        name: name
        _id: id
        token: token
      properties:
        _id:
          readOnly: true
          type: string
        name:
          type: string
        org:
          type: string
        token:
          readOnly: true
          type: string
      type: object
    TokenRequest:
      example:
        name: name
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    Account:
      example:
        country: country
        companyType: companyType
        companyDesc: companyDesc
        enableNotifications: true
        name: name
        _id: _id
      properties:
        _id:
          readOnly: true
          type: string
        name:
          type: string
        companyType:
          type: string
        companyDesc:
          type: string
        country:
          maxLength: 2
          type: string
        enableNotifications:
          default: true
          type: boolean
      type: object
    AccountRequest:
      example:
        country: country
        companyType: companyType
        companyDesc: companyDesc
        enableNotifications: true
        name: name
      properties:
        name:
          type: string
        companyType:
          type: string
        companyDesc:
          type: string
        country:
          maxLength: 2
          type: string
        enableNotifications:
          default: true
          type: boolean
      type: object
    OrganizationRequest:
      example:
        name: name
        account: account
        group: group
      properties:
        name:
          type: string
        group:
          type: string
        account:
          type: string
      type: object
    Organization:
      example:
        name: name
        _id: _id
        account: account
        group: group
      properties:
        _id:
          readOnly: true
          type: string
        name:
          type: string
        group:
          type: string
        account:
          type: string
      type: object
    NotificationRequest:
      properties:
        count:
          minimum: 0
          type: integer
      type: object
    Notification:
      example:
        status: unread
        _id: 123
        title: Router state change
        time: 2019-12-19T12:10:01.667Z
        device: test0
        machineId: "123"
        details: Router state changed to "Not running"
      properties:
        _id:
          type: string
        title:
          type: string
        status:
          enum:
          - read
          - unread
          type: string
        time:
          type: string
        device:
          type: string
        machineId:
          type: string
        details:
          type: string
      type: object
    JobAttempt:
      example:
        max: 7
        made: 5
        remaining: 2
      properties:
        made:
          type: integer
        remaining:
          type: integer
        max:
          type: integer
      type: object
    Job:
      example:
        progress: 1
        created_at: created_at
        id: 0
        state: 5
        type: type
        priority: 6
        attempts:
          max: 7
          made: 5
          remaining: 2
      properties:
        id:
          type: integer
        type:
          type: string
        priority:
          type: integer
        progress:
          type: integer
        state:
          type: integer
        created_at:
          type: string
        attempts:
          $ref: '#/components/schemas/JobAttempt'
      type: object
    DeviceRequest:
      example:
        interfaces:
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          MAC: MAC
          routing: routing
          IPv6Mask: 6
          isAssigned: true
          driver: driver
          IPv4Mask: 0
          name: name
          pciaddr: pciaddr
          _id: _id
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          MAC: MAC
          routing: routing
          IPv6Mask: 6
          isAssigned: true
          driver: driver
          IPv4Mask: 0
          name: name
          pciaddr: pciaddr
          _id: _id
        org: org
        isConnected: true
        upgradeSchedule:
          jobQueued: true
          _id: _id
          time: time
        description: description
        defaultRoute: defaultRoute
        deviceStatus: true
        deviceToken: deviceToken
        labels:
        - labels
        - labels
        site: site
        hostname: true
        machineId: machineId
        versions:
          agent: agent
          router: router
          device: device
        name: name
        pendingDevModification: true
        isApproved: true
        staticroutes:
        - destination: destination
          interface: interface
          gateway: gateway
        - destination: destination
          interface: interface
          gateway: gateway
        fromToken: fromToken
        account: account
        ipList: ipList
      properties:
        machineId:
          type: string
        name:
          type: string
        description:
          type: string
        site:
          type: string
        defaultRoute:
          type: string
        isApproved:
          type: boolean
        isConnected:
          type: boolean
        pendingDevModification:
          type: boolean
        hostname:
          type: boolean
        deviceStatus:
          type: boolean
        deviceToken:
          type: string
        fromToken:
          type: string
        account:
          type: string
        org:
          type: string
        ipList:
          type: string
        staticroutes:
          items:
            $ref: '#/components/schemas/StaticRoute'
          type: array
        upgradeSchedule:
          $ref: '#/components/schemas/UpgradeSchedule'
        labels:
          items:
            type: string
          type: array
        interfaces:
          items:
            $ref: '#/components/schemas/Interface'
          type: array
        versions:
          $ref: '#/components/schemas/DeviceVersion'
      type: object
    Device:
      example:
        interfaces:
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          MAC: MAC
          routing: routing
          IPv6Mask: 6
          isAssigned: true
          driver: driver
          IPv4Mask: 0
          name: name
          pciaddr: pciaddr
          _id: _id
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          MAC: MAC
          routing: routing
          IPv6Mask: 6
          isAssigned: true
          driver: driver
          IPv4Mask: 0
          name: name
          pciaddr: pciaddr
          _id: _id
        org: org
        isConnected: true
        upgradeSchedule:
          jobQueued: true
          _id: _id
          time: time
        description: description
        defaultRoute: defaultRoute
        deviceStatus: object
        deviceToken: deviceToken
        labels:
        - labels
        - labels
        machineId: machineId
        site: site
        hostname: true
        versions:
          agent: agent
          router: router
          device: device
          vpp: vpp
          frr: frr
        name: name
        _id: _id
        pendingDevModification: true
        isApproved: true
        staticroutes:
        - id: 1
          destination: 20.20.0.0
          gateway: 20.20.0.1
          interface: eth0
        - id: 2
          destination: 10.10.0.0
          gateway: 10.10.0.1
          interface: eth1
        fromToken: fromToken
        account: account
        ipList: ipList
      properties:
        _id:
          maxLength: 24
          minLength: 24
          readOnly: true
          type: string
        machineId:
          type: string
        name:
          type: string
        description:
          type: string
        site:
          type: string
        defaultRoute:
          type: string
        isApproved:
          type: boolean
        isConnected:
          type: boolean
        pendingDevModification:
          type: boolean
        hostname:
          type: boolean
        deviceStatus:
          type: boolean
        deviceToken:
          type: string
        fromToken:
          type: string
        account:
          type: string
        org:
          type: string
        ipList:
          type: string
        staticroutes:
          items:
            $ref: '#/components/schemas/StaticRoute'
          type: array
        upgradeSchedule:
          $ref: '#/components/schemas/UpgradeSchedule'
        labels:
          items:
            type: string
          type: array
        interfaces:
          items:
            $ref: '#/components/schemas/Interface'
          type: array
        versions:
          $ref: '#/components/schemas/DeviceVersion'
      type: object
    UpgradeSchedule:
      example:
        jobQueued: true
        _id: _id
        time: time
      properties:
        _id:
          readOnly: true
          type: string
        time:
          type: string
        jobQueued:
          type: boolean
      type: object
    Interface:
      example:
        IPv6: IPv6
        PublicIP: PublicIP
        IPv4: IPv4
        type: WAN
        MAC: MAC
        routing: routing
        IPv6Mask: 6
        isAssigned: true
        driver: driver
        IPv4Mask: 0
        name: name
        pciaddr: pciaddr
        _id: _id
      properties:
        _id:
          readOnly: true
          type: string
        pciaddr:
          type: string
        driver:
          type: string
        IPv4:
          type: string
        IPv6:
          type: string
        PublicIP:
          type: string
        isAssigned:
          type: boolean
        routing:
          type: string
        type:
          enum:
          - WAN
          - LAN
          type: string
        IPv4Mask:
          type: integer
        MAC:
          type: string
        name:
          type: string
        IPv6Mask:
          type: integer
      type: object
    DeviceVersion:
      example:
        agent: agent
        router: router
        device: device
      properties:
        agent:
          type: string
        device:
          type: string
        router:
          type: string
      type: object
    Role:
      enum:
      - owner
      - manager
      - viewer
      type: string
    Member:
      example:
        user_email: user_email
        role: owner
        user__id: user__id
        user_name: user_name
        account_name: account_name
        _id: _id
        to: to
        organization_name: organization_name
        account__id: account__id
        group: group
        organization__id: organization__id
      properties:
        _id:
          maxLength: 24
          minLength: 24
          readOnly: true
          type: string
        user__id:
          maxLength: 24
          minLength: 24
          type: string
        user_name:
          type: string
        user_email:
          type: string
        to:
          type: string
        account_name:
          type: string
        account__id:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
        organization_name:
          type: string
        organization__id:
          maxLength: 24
          minLength: 24
          type: string
        role:
          $ref: '#/components/schemas/Role'
      type: object
    LoginRequest:
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required: ["username", "password"]
      type: object
    LoginResponse:
      example:
        username: "John Doe"
      properties:
        username:
          type: string
      type: object
    DeviceStatus:
      enum:
      - connected
      - disconnected
      type: string
    DeviceStaticRouteRequest:
      properties:
        destination:
          type: string
        gateway:
          type: string
        ifname:
          type: string
      type: object
    DeviceRouteInformation:
      example:
        osRoutes:
        - metric: 0
          destination: destination
          flags: flags
          interface: interface
          gateway: gateway
          mask: mask
        - metric: 0
          destination: destination
          flags: flags
          interface: interface
          gateway: gateway
          mask: mask
        vppRoutes:
        - metric: 6
        - metric: 6
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        osRoutes:
          items:
            $ref: '#/components/schemas/DeviceRouteOs'
          type: array
        vppRoutes:
          items:
            $ref: '#/components/schemas/DeviceRouteVpp'
          type: array
      type: object
    DeviceRouteOs:
      example:
        metric: 0
        destination: destination
        flags: flags
        interface: interface
        gateway: gateway
        mask: mask
      properties:
        metric:
          type: integer
        destination:
          type: string
        mask:
          type: string
        flags:
          type: string
        interface:
          type: string
        gateway:
          type: string
      type: object
    DeviceRouteVpp:
      example:
        metric: 6
      properties:
        metric:
          type: integer
      type: object
    DeviceStaticRouteInformation:
      example:
        status: connected
        ifname: eth0
        destination: 1.1.0.0
        gateway: 1.1.1.1
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        destination:
          type: string
        gateway:
          type: string
        ifname:
          type: string
      type: object
    DeviceStatistics:
      example:
        status: status
      properties:
        status:
          type: object
      type: object
    DeviceConfiguration:
      example:
        configuration:
        - message: message
          params:
          - {}
          - {}
        - message: message
          params:
          - {}
          - {}
        status: connected
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        configuration:
          items:
            $ref: '#/components/schemas/DeviceConfigurationItem'
          type: array
      type: object
    DeviceConfigurationItem:
      example:
        message: message
        params:
        - {}
        - {}
      properties:
        message:
          type: string
        params:
          items:
            type: object
          type: array
      type: object
    DeviceLog:
      example:
        logs:
        - logs
        - logs
        status: connected
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        logs:
          items:
            type: string
          type: array
      type: object
    Tunnel:
      example:
        tunnelStatusA: '{}'
        num: 0
        interfaceADetails: '{}'
        isActive: true
        interfaceBDetails: '{}'
        tunnelStatusB: '{}'
        interfaceA: '{}'
        interfaceB: '{}'
        deviceA: '{}'
        deviceAconf: true
        deviceB: '{}'
        __v: 6
        deviceBconf: true
        _id: _id
      properties:
        num:
          type: integer
        isActive:
          type: boolean
        deviceAconf:
          type: boolean
        deviceBconf:
          type: boolean
        _id:
          type: string
        __v:
          type: integer
        deviceA:
          type: object
        deviceB:
          type: object
        interfaceA:
          type: object
        interfaceB:
          type: object
        interfaceADetails:
          type: object
        interfaceBDetails:
          type: object
        tunnelStatusA:
          type: object
        tunnelStatusB:
          type: object
      type: object
    StaticRouteRequest:
      example:
        destination: destination
        _id: _id
        interface: interface
        gateway: gateway
      properties:
        _id:
          type: string
        destination:
          description: Destination
          maxLength: 24
          type: string
        gateway:
          description: Gateway to use
          maxLength: 24
          type: string
        interface:
          description: Interface name
          maxLength: 24
          type: string
      type: object
    StaticRoute:
      example:
        destination: destination
        interface: interface
        gateway: gateway
      properties:
        destination:
          description: Destination
          maxLength: 24
          type: string
        gateway:
          description: Gateway to use
          maxLength: 24
          type: string
        interface:
          description: Interface name
          maxLength: 24
          type: string
      type: object
    ResetPasswordRequest:
      example:
        email: email
      properties:
        email:
          type: string
      type: object
    UpdatePasswordRequest:
        example:
          email: email
        properties:
          email:
            type: string
        type: object
    RegisterAccountRequest:
      example:
        userJobTitle: userJobTitle
        serviceType: Provider
        country: country
        password: password
        accountName: accountName
        userLastName: userLastName
        userPhoneNumber: userPhoneNumber
        acceptTerms: true
        userFirstName: userFirstName
        companySize: companySize
        email: email
        numberSites: 0
      properties:
        accountName:
          type: string
        email:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        userJobTitle:
          type: string
        userPhoneNumber:
          type: string
        password:
          type: string
        country:
          maxLength: 2
          type: string
        companySize:
          type: string
        serviceType:
          enum:
          - Provider
          - Internal
          type: string
        numberSites:
          type: integer
        acceptTerms:
          type: boolean
      type: object
    CommandRequest:
      example:
        ids:
        - ids
        - ids
        command: ""
      properties:
        ids:
          items:
            type: string
          type: array
        command:
          oneOf:
          - $ref: '#/components/schemas/CreateTunnelCommand'
          - $ref: '#/components/schemas/DeleteTunnelCommand'
      type: object
    CreateTunnelCommand:
      properties:
        devices:
          items:
            type: string
          type: array
      type: object
    DeleteTunnelCommand:
      properties:
        id:
          type: string
      type: object
    Error:
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
      type: object
  securitySchemes:
    apiKey:
      in: header
      name: APIKEY
      type: apiKey
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
